% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Wrapper.R
\name{fit.fqtl.deconv}
\alias{fit.fqtl.deconv}
\title{Variational deconvolution of matrix}
\usage{
fit.fqtl.deconv(
  y,
  weight.nk,
  svd.init = TRUE,
  model = c("gaussian", "nb", "logit", "voom", "beta"),
  x.mean = NULL,
  x.var = NULL,
  right.nn = FALSE,
  do.hyper = FALSE,
  tau = NULL,
  pi = NULL,
  tau.lb = -10,
  tau.ub = -4,
  pi.lb = -4,
  pi.ub = -1,
  tol = 1e-04,
  gammax = 1000,
  rate = 0.01,
  decay = 0,
  jitter = 0.1,
  nsample = 10,
  vbiter = 2000,
  verbose = TRUE,
  mu.min = 0.01,
  print.interv = 10,
  nthread = 1,
  rseed = NULL,
  options = list()
)
}
\arguments{
\item{y}{[n x m] response matrix}

\item{weight.nk}{(non-negative) weight matrix to help factors being mode interpretable}

\item{svd.init}{Initalize by SVD (default: TRUE)}

\item{model}{choose an appropriate distribution for the generative model of y matrix from \code{c('gaussian', 'nb', 'logit', 'voom', 'beta')} (default: 'gaussian')}

\item{x.mean}{[n x p] covariate matrix for mean change (can specify location)}

\item{x.var}{[n x r] covariate marix for variance#'}

\item{right.nn}{non-negativity in factored effect (default: FALSE)}

\item{do.hyper}{Hyper parameter tuning (default: FALSE)}

\item{tau}{Fixed value of tau}

\item{pi}{Fixed value of pi}

\item{tau.lb}{Lower-bound of tau (default: -10)}

\item{tau.ub}{Upper-bound of tau (default: -4)}

\item{pi.lb}{Lower-bound of pi (default: -4)}

\item{pi.ub}{Upper-bound of pi (default: -1)}

\item{tol}{Convergence criterion (default: 1e-4)}

\item{gammax}{Maximum precision (default: 1000)}

\item{rate}{Update rate (default: 1e-2)}

\item{decay}{Update rate decay (default: 0)}

\item{jitter}{SD of random jitter for mediation & factorization (default: 0.01)}

\item{nsample}{Number of stochastic samples (default: 10)}

\item{vbiter}{Number of variational Bayes iterations (default: 2000)}

\item{verbose}{Verbosity (default: TRUE)}

\item{mu.min}{mininum non-negativity weight (default: 0.01)}

\item{print.interv}{Printing interval (default: 10)}

\item{nthread}{Number of threads during calculation (default: 1)}

\item{rseed}{Random seed}

\item{options}{A combined list of inference/optimization options}
}
\description{
Variational deconvolution of matrix
}
\examples{

################################################################
## Simulate weighted matrix factorization (e.g., cell-type fraction)

n <- 600
p <- 1000
h2 <- 0.5

X <- matrix(rnorm(n * p), n, p)
Y <- matrix(rnorm(n * 1), n, 1) * sqrt(1 - h2)

## construct cell type specific genetic activities
K <- 3

causal <- NULL
eta <- matrix(nrow = n, ncol = K)

for(k in 1:K) {
  causal.k <- sample(p, 3)
  causal <- rbind(causal, data.frame(causal.k, k = k))
  eta[, k] <- eta.k <- X[, causal.k, drop = FALSE] \%*\% matrix(rnorm(3, 1) / sqrt(3), 3, 1)
}

## randomly sample cell type proportions from Dirichlet
rdir <- function(alpha) {
  ret <- sapply(alpha, rbeta, n = 1, shape2 = 1)
  ret <- ret / sum(ret)
  return(ret)
}

prop <- t(sapply(1:n, function(j) rdir(alpha = rep(1, K))))
eta.sum <- apply(eta * prop, 1, sum)
Y <- Y + eta.sum * sqrt(h2)

opt <- list(tol=1e-8, pi = -0, gammax=1e3, vbiter=10000, out.residual = FALSE,
do.hyper = FALSE, right.nn = TRUE)
out <- fit.fqtl.deconv(Y, prop, options = opt)

y.decon <- out$U$theta

par(mfrow = c(1, K))
for(.k in 1:K) {
  plot(y.decon[, .k], eta[, .k], pch = 19, col = 'gray50')
}

}
